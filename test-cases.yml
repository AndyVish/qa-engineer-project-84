---
- summary: |
    Поиск товара по ключевому слову (символы в нижнем регистре)
  requirement: |
    Тестируемое требование. Пользователь должен найти товар по ключевому слову
  prerequisites: |
    Обновить страницу
  test-data: |
    ключевое слово = "laptop"
  steps:
    - Вводим ключевое слово в поле поиска
  expected-result: >
    Пользователь должен увидеть карточки товаров, в заголовке и описании которых
    используется ключевое слово. Регистр букв ключевого слова в тексте может быть любым
    
- summary: |
    Поиск товара по ключевому слову (символы в верхнем регистре)
  requirement: |
    Пользователь должен найти товар по ключевому слову
  prerequisites: |
    Обновить страницу
  test-data: |
    Ключевое слово = "LAPTOP"
  steps:
    - Вводим Ключевое слово в поле поиска
  expected-result: >
    Пользователь должен увидеть все товары, в тексте которых
    используется ключевое слово. Регистр букв ключевого слова в тексте может быть любым

- summary: |
    Поиск товара по категории
  requirement: |
    Пользователь должен получит все товары относящиеся к выбранной категории
  prerequisites: |
    Обновить страницу
  test-data: |
    нет
  steps:
    - выбрать любую категорию из списка
  expected-result: >
    Пользователь должен увидеть карточки товаров, которые относятся к выбраной категории

- summary: |
    Фильтрация по производителю
  requirement: >
    Пользователь должен получить все товар относящиеся к выбранному производителю
  prerequisites: |
    Обновить страницу
  test-data: |
    нет
  steps:
    - отметить чекбокс с производителем (brand)
  expected-result: >
    Пользователь должен увидеть все товары, которые относятся к
    выбраному бренду
    
- summary: |
    Проверка фильтра Цена/Price (min = 0 max = 11190)
  requirement: >
    При вводе значений от 0 до 11190 пользователь должен получить все
    товары, которые есть на странице
  prerequisites: |
    обновить страницу
  test-data: |
    min = 0 max = 11190
  steps:
    - Вводим min в поле from
    - Вводим max в поле to
  expected-result: |
    пользователь должен получить все товары, которые есть на странице
    
- summary: |
    Проверка фильтра Цена/Price (min = 0 max = 0)
  requirement: >
    При вводе значений от 0 до 0 пользователь должен получить
    сообщение, что ничего не найдено
  prerequisites: |
    обновить страницу
  test-data: |
    min = 0 max = 0
  steps:
    - Вводим min в поле from
    - Вводим max в поле to
  expected-result: |
    пользователь должен получить сообщение, что ничего не найдено
    
- summary: |
    Проверка фильтра Цена (from = 220 to = 220)
  requirement: >
    При вводе одинакового значения (больше нуля) в оба поля фильтра,
    пользователь должен получить товары с указаной ценой
  prerequisites: |
    обновить страницу
  test-data: |
    нет
  steps:
    - Выбрать категорию из списка
    - У перврго товара в списка, скопировать цену
    - Вставить цену в поле from
    - Вставить цену в поле to
  expected-result: >
    пользователь должен получить все товары, которые есть на
    странице, с указаной ценой
    
- summary: |
    Проверка фильтра Цена/Price (min = 220 max = 220)
  requirement: >
    При вводе одинакового значения (больше нуля) в оба поля фильтра,
    пользователь должен получить товары с указаной ценой
  prerequisites: |
    обновить страницу
  test-data: |
    нет
  steps:
    - Выбрать категорию из списка
    - У перврго товара в списка, скопировать цену
    - Вставить цену в поле from
    - Вставить цену в поле to
  expected-result: >
    Пользователь должен получить все товары, которые есть на
    странице, с указаной ценой
- summary: >
    Проверка фильтра Цена/Price, ввод сверхмаксимального/ значения в поле
    from с помощь контрола(from >= 11191 to = 0)
  requirement: >
    Пользователь не должен иметь возможности устанвливать цену выше
    максимального значения в поле from спомощью контрола,
  prerequisites: |
    Обновить страницу
  test-data: |
    min = 11190
  steps:
    - Вставить min в поле from
    - Увеличить значение в поле from c помощью контрола "up"
  expected-result: |
    Цена должена быть равна min
- summary: >
    Проверка фильтра Цена/Price, ввод сверхминемального значения в поле
    from с помощь контрола(from < 0)
  requirement: >
    Пользователь не должен иметь возможности устанвливать цену ниже
    значения в поле from с помощью контрола,
  prerequisites: |
    Обновить страницу
  test-data: |
    min = 0
  steps:
    - Вставить min в поле from
    - Уменьшить значение в поле from c помощью контрола "down"
  expected-result: |
    Цена должена быть равна min
- summary: >
    Проверка фильтра Цена/Price, ввод сверхмаксимального значения в поле to
    с помощь контрола(to > 11190)
  requirement: >
    Пользователь не должен иметь возможности устанвливать цену выше
    максимального значения в поле from спомощью контрола,
  prerequisites: |
    обновить страницу
  test-data: |
    max = 11190
  steps:
    - Вставить min в поле from
    - Увеличить значение в поле to c помощью контрола "up"
  expected-result: |
    Цена должена быть равна max
- summary: >
    Проверка фильтра Цена, ввод сверхминемального значения в поле to с
    помощь контрола(to = 0)
  requirement: >
    Пользователь не должен иметь возможности устанвливать цену выше
    максимального значения в поле from спомощью контрола,
  prerequisites: |
    обновить страницу
  test-data: |
    max = 11190
  steps:
    - Вставить min в поле from
    - Увеличить значение в поле to c помощью контрола "up"
  expected-result: |
    Цена должена быть равна max
- summary: |
    Переход в карточку товара
  requirement: |
    Пользователь должен иметь возможности открыть карточку товара
  prerequisites: |
    Обновить страницу
  test-data: |
    нет
  steps:
    - Выбрать любой товар из списка
  expected-result: |
    Окрывается карточка товара
- summary: |
    Просмотреть все изображения в карточке товара
  requirement: |
    Пользователь должен иметь возможности просмотреть изображения товара
  prerequisites: |
    Перейти в карточку товара
  test-data: |
    нет
  steps:
    - Выбрать любое изображение из списка
  expected-result: |
    Появляется увеличенное изображение товара
- summary: |
    Выделение рамки карточки товара при наведении указателя мыши
  requirement: |
    Пользователь должен видеть какая карточка товара будет активна при нажатии
  prerequisites: |
    обновить страницу
  test-data: |
    нет
  steps:
    - Навести курсор мыши на карточку товара
  expected-result: |
    Пользователь должен видеть выделение карточки товара
- summary: |
    Добавление товара в корзину
  requirement: |
    Пользователь должен иметь возможность добавлять товары в корзину
  prerequisites: |
    Обновить страницу
  test-data: |
    нет
  steps:
    - Нажать на кнопку "Add to cart"
    - Нажать на ссылку "Cart"
  expected-result: |
    Пользователь должен увидеть информацию о вбраном товаре  
- summary: |
    Увеличить количество товар в корзине, путем его повторного выбора 
  requirement: >
    Пользователь должен иметь возможность добавить в корзину один и тот
    же товар произвольное количество раз, при этом увеличиватся его количество
  prerequisites: |
    Очистить корзину
    Обновить страницу         
  test-data: |
    нет
  steps:
    - Перейти к первой картачке в списке
    - Нажать кнопку "Add to Cart"
    - Нажать кнопку "Add to Cart"
    - Перейти в карточку с описанием товар
    - Нажать кнопку "Add to Cart"
    - Нажать кнопку "Add to Cart"
    - Нажать на ссылку "Cart"
  expected-result: |
    Пользователь должен увидеть, что количество товара равно 4  
- summary: >
    Количество одиного товар в корзине, не должно привышать количество
    товара в наличии 
  requirement: >
    Пользователь не должен иметь возможность добавить в корзину один и
    тот же товар больше, чем есть в наличии
  prerequisites: |
    Очистить корзину
    Обновить страницу         
  test-data: |
    нет
  steps:
    - Найти карточку товара с наименьшим значением по количеству
    - Нажать кнопку "Add to Cart" больше, чем указано в количестве товара
    - Нажать на ссылку "Cart"
  expected-result: >
    Пользователь должен увидеть, что количество товара в корзине
    равно количеству товара в наличии 
- summary: >
    Пользователь должен иметь возможность добавить несколко разных товаров
    в корзину 
  requirement: |
    Пользователь должен иметь возможность добавить в корзину разные товары
  prerequisites: |
    Очистить корзину
    Обновить страницу         
  test-data: |
    нет
  steps:
    - 1 Выбрать категорию с количеством товаров больше одного
    - 2 Выбрать первую карточку из списка
    - 3 Нажать кнопку "Add to Cart"
    - 4 Выбрать выбрать второй товар из списка
    - 5 Нажать кнопку "Add to Cart"
    - 6 Выбрать другую категорию с количеством товаров больше одного
    - 7 Повторить шаги с 2 по 5
    - 8 Нажать на ссылку "Cart"
  expected-result: |
    Пользователь должен увидеть список с выбранными им товарами
- summary: |
    Пользователь должен иметь возможность удалить "лишний" товар из корзины 
  requirement: |
    Пользователь должен иметь возможность удалить "лишний" товар из корзины
  prerequisites: |
    Очистить корзину
    Обновить страницу         
  test-data: |
    нет
  steps:
    - 1 Выбрать категорию
    - 2 Выбрать первую карточку из списка
    - 3 Нажать кнопку "Add to Cart"
    - 4 Выбрать другую категорию
    - 5 Повторить шаги 2 и 3
    - 6 Нажать на ссылку "Cart"
    - 7 Нажать на кнопку "Delete" у первого в товара в списке
  expected-result: |
    В корзине должен остаться товар из шага 5
- summary: >
    Пользователь должен иметь возможность удалить все товары из корзины
    одной кнопкой 
  requirement: >
    Пользователь должен иметь возможность удалить товар из корзины
    корзины одной кнопкой
  prerequisites: |
    очистить корзину
    обновить страницу         
  test-data: |
    нет
  steps:
    - 1 Выбрать категорию
    - 2 Выбрать первую карточку из списка
    - 3 Нажать кнопку "Add to Cart"
    - Выбрать другую категорию
    - Повторить шаги 2 и 3
    - Нажать на ссылку "Cart"
    - Нажать на кнопку "Clear cart"
  expected-result: |
    Корзина должна быть пуста
- summary: |
    Сохранить настройки при перезагрузке страницы
  requirement: >
    Пользователь должен иметь возможность сохранять настройки поиска и
    фильтрации последнего сеанса 
  prerequisites: |
    Обновить страницу         
  test-data: |
    нет
  steps:
    - В поле поиска написать любое слово
    - Выбрать любую категорию
    - Отметить любой чек бокс
    - Указать любую цену
    - Перегрузить страницу
  expected-result: |
    Все указанные фильтры должны остаться без изменений
- summary: |
    Поле поиска должно быть защищено от XSS атак
  requirement: >
    Пользователь должен иметь возможность сохранять настройки поиска и
    фильтрации последнего сеанса 
  prerequisites: |
    Обновить страницу         
  test-data: |
    xss = "<script>alert('attack!');</script>"
  steps:
    - В поле поиска написать xss
  expected-result: |
    Должно появиться сообщение: "По запросу ничего не найдено"
- summary: |
    Поле поиска должно иметь элемент для очистки введенного значения 
  requirement: |
    Пользователь должен иметь возможность очистить поле ввода одним кликом 
  prerequisites: |
    Обновить страницу         
  test-data: ""
  steps:
    - В поле поиска написать "строкаТест"
    - Нажать на кнопку "очистить"
  expected-result: |
    Пользователь должен увидеть чистое поле для поиска
- summary: |
    Список с категориями должен иметь пункт "все"
  requirement: >
    Пользователь должен иметь возможность видеть товары всех категорий
    при выборе пункт "все" 
  prerequisites: |
    обновить страницу         
  test-data: ""
  steps:
    - Выбрать любую категорию
    - Выбрать категорию "все"
  expected-result: |
    Пользователь должен увидеть товары всех категорий
